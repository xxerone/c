#include <stdio.h>

struct GameInfo {
	char* name;
	int year;
	int price;
	char* company;
	struct GameInfo* friendGame; //연관 업체 게임 - 자세한 설명!! : 
		//구조체 안 구조체
};
//구조체 - 전역 위치 선언


typedef struct GameInformation { // typedef struct만 쓰고 GAME_INFO라고 쓸 수도 있음.
	char* name;
	int year;
	int price;
	char* company;
	struct GameInfo* friendGame; //연관 업체 게임 - 자세한 설명!! : 
	//구조체 안 구조체
} GAME_INFO; // typedef struct GameInformation = GAME_INFO

int main_struct(void) 
{

	// 구조체 기본: 비슷한 정보를 하나로 관리
	// [게임 출시] - 이름 : 나도게임, 발매년도 : 2017년, 가격 : 50원, 제작사 : 나도회사
	char* name = "나도게임"; // 포인터, 왜?
	int year = 2017;
	int price = 50;
	char* company = "나도회사";

	// [게임 출시] - 이름 : 너도게임, 발매년도 : 2017년, 가격 : 100원, 제작사 : 너도회사
	char* name2 = "너도게임"; // 포인터, 왜?
	int year2 = 2017;
	int price2 = 100;
	char* company2 = "너도회사";
	
	
	// 구조체 사용 : 선언과 각각에 대해 하나씩 집어넣음
	struct GameInfo gameInfo1; // 자료형(struct GameInfo) 변수명
	gameInfo1.name = "나도게임"; // 실제로 값 집어넣을 때
	gameInfo1.year = 2017;
	gameInfo1.price = 50;
	gameInfo1.company = "나도회사";

	// 구조체 출력
	printf("-- 게임 출시 정보 --\n");
	printf("게임명 : %s\n", gameInfo1.name);
	printf("발매년도 : %d\n", gameInfo1.year);
	printf("가격 : %d\n", gameInfo1.price);
	printf("제작사 : %s\n", gameInfo1.company);

	// 구조체를 배열처럼 초기화
	struct GameInfo gameInfo2 = {"너도게임", 2017, 100, "너도회사"}; //순서대로 하면 됨
	printf("\n\n-- 또다른 게임 출시 정보 --\n");
	printf("게임명 : %s\n", gameInfo2.name);
	printf("발매년도 : %d\n", gameInfo2.year);
	printf("가격 : %d\n", gameInfo2.price);
	printf("제작사 : %s\n", gameInfo2.company);


	// 구조체 배열
	struct GameInfo gameArray[2] = { {"너도게임", 2017, 100, "너도회사"} , {"나도게임", 2017, 50, "나도회사"} }; // 2개 공간이므로 구조체 배열에 들어갈 땐 이렇게

	
	// 구조체 포인터
	struct GameInfo* gamePtr; //미션맨
	gamePtr = &gameInfo1; //포인터는 주소를 가진다.
	printf("\n\n -- 미션맨의 게임 출시 정보 --\n");
	printf("게임명 : %s\n", (*gamePtr).name); 
	// *(gamePtr.name) = *gamePtr.name, 우리가 실제로 원하는건 gamePtr 자체만 gameinfo1의 주소를 가지기 때문에 자체의 값을 먼저 정의를 하는게 맞다 : (*gamePtr)
	printf("발매년도 : %d\n", (*gamePtr).year); //int형 변수 값을 포인터로 가리킬 때 = *ptr (int 변수의 주소값을 가지는데 ptr은 주소를 가지고 *은 값을 가진다.
	printf("가격 : %d\n", (*gamePtr).price);
	printf("제작사 : %s\n", (*gamePtr).company);

	// 포인터의 다른 방식
	printf("\n\n 포인터의 다른 방식 게임명 : %s\n", gamePtr->name); //gamePtr 주소값의 실제 변수 (name)를 가리킬 때
	printf("발매년도 : %d\n", gamePtr->year);
	printf("가격 : %d\n", gamePtr->price);
	printf("제작사 : %s\n", gamePtr->company);


	// 구조체 안의 구조체
	// 연관 업체 게임 소개
	gameInfo1.friendGame = &gameInfo2;
	printf("\n\n -- 연관 업체의 게임 출시 정보 --\n");
	printf("게임명 : %s\n", gameInfo1.friendGame -> name); // 가지고 있는 실제 정보 출력
	printf("발매년도 : %d\n", gameInfo1.friendGame -> year); 
	printf("가격 : %d\n", gameInfo1.friendGame -> price);
	printf("제작사 : %s\n", gameInfo1.friendGame -> company);


	// typedef -> 자료형에 별명 지정
	int i = 1; //정수형 변수 i에 1을 집어넣는다.
	typedef int 정수; //int = 정수
	typedef float 실수;
	정수 정수변수 = 3; //int i = 3랑 같다., 변수명도 한글 가능
	실수 실수변수 = 3.34f; //float f = 3.34f;
	printf("정수변수 : %d, 실수변수 : %.2f\n\n", 정수변수, 실수변수);

	// 구조체에 적용
	typedef struct GameInfo 게임정보; // struct Gameinfo = 게임정보
	게임정보 game1;
	game1.name = "한글 게임";
	game1.year = 2015;

	GAME_INFO game2;
	game2.name = "한글 게임2";
	game2.year = 2014;

	struct GameInformation game3; // GameInformation 윗부분 지우면 오류. -> 자세한 설명!!
	game3.name = "한글 게임3";

	
	//프로젝트 전반전


	//프로젝트 후반전

	return 0;
}
