#include <stdio.h>
#include <time.h> // 랜덤 수 - 
#include <stdlib.h> // 개발 환경에 따라 다르나 time.h만 추가해서 안됐을 때 스텐다드 라이브러리도 추가하기

// 정수형 변수
int main_a(void) 
{
	/*
	// 변수 : 변하는 수 vs 상수 : 변하지 않는 수 (1번 정의하면 끝이며 더 이상 값 바꿀 수 없음)
	int age = 12; // 자료형 (정수(int), 실수형)   변수명 (age)   =   12 (자료형에 해당하는 값, age 변수에 넣는다.);
	printf("Hello World\n"); // 실수 : 소수점이 붙은 수 (2.0, 1.3) > 정수 : (-1,0,1)
	printf("%d\n", age); // %d : 정수형 값 출력 ','뒤 값 순서대로 나옴
	age = 13; // 변수라 고정되어 있지 않아 변경 가능, int 없이 age = 값으로 사용
	printf("%d\n", age);
	*/


	// 주석


	/*
	// 실수형 변수
	float f = 46.5f;
	printf("%.2f\n", f); // %.소수점 출력 자리수f

	double d = 4.428;
	printf("%.2lf", d); // %.소수점 출력 자리수lf (여기선 3번째 자리에서 반올림)
	*/

	/*
	// 상수
	const int YEAR = 2000;
	printf("태어난 년도 : %d\n", YEAR);
	// YEAR = 2001; - 변경 불가
	*/


	/*
	// printf - 연산
	int add = 3 + 7;
	printf("%d\n", add); // 계산 값이 바로 들어감
	printf("3 + 7 = %d\n", add); // %d 값만 10이 들어가고 나머지는 바로 출력
	printf("%d + %d + %d", 3, 7, 3 + 7); // 변수 사용하지 않고도 바로 출력 가능, * : 곱하기
	*/


	/*
	// scanf : 키보드 입력 받아 저장
	int input;
	printf("값을 입력하세요. : ");
	scanf_s("%d", &input); // 정수형 값을 받음, &(변수명이 정의된 곳에 값을 입력받겠다) 변수명
	printf("입력값 : %d\n", input);

	int one, two, three;
	printf("3개의 정수를 입력하세요 : ");
	scanf_s("%d %d %d", &one, &two, &three);
	printf("첫 번째 입력값 : %d\n", one);
	printf("두 번째 입력값 : %d\n", two);
	printf("세 번째 입력값 : %d\n", three);
	

	// 문자 : 한 글자, 문자열 : 한 글자 이상의 여러 글자
	char c = 'A';
	printf("%c\n", c);

	char str[256]; // char c 변수 저장하기 위한 공간을 256개 만든다
	scanf_s("%s", str, sizeof(str)); // 문자열 입력에는 & 표시는 필요 없지만 공간을 표시해주기, 256보다 크면 문제가 발생하므로 sizeof를 통해 256개 이내 문자열만 받는다.
	printf("%s\n", str);
	*/


	// 프로젝트


	/*
	// 뿔뿔 - 결과 확인 안함!! + 해보기!!
	printf("Hello World\n"); // 새로운 파일을 만들고 main 함수를 사용한다면 이전 파일에서는 메인 함수 이름 바꾸기
	int a = 10;
	printf("a는 %d\n", a);
	a++; // a = a + 1
	printf("a는 %d\n", a);

	int b = 20;
	printf("b는 %d\n", ++b); // 문장에서 ++b 동작 먼저 수행하고 끝, 즉 여기서 b는 21이라 출력됨. (++b를 먼저 하므로)
	printf("b는 %d\n", b++); // 문장을 다 수행하고 나서 다음줄로 넘어갈 때 b + 1을 하기, 즉 여기서 b는 21이라 출력되고 나중에 b가 ++됨
	printf("b는 %d\n", b);

	int i = 1;
	printf("Hello World %d\n", i++); // 1이 출력되고 다음 문장 넘어갈 때 i가 2가 됨.
	printf("Hello World %d\n", i++); // 1이 출력되고 다음 문장 넘어갈 때 i가 2가 됨.
	printf("Hello World %d\n", i++); // 1이 출력되고 다음 문장 넘어갈 때 i가 2가 됨.
	printf("Hello World %d\n", i++); // 1이 출력되고 다음 문장 넘어갈 때 i가 2가 됨.
	printf("Hello World %d\n", i++); // 1이 출력되고 다음 문장 넘어갈 때 i가 2가 됨.
	printf("Hello World %d\n", i++); // 1이 출력되고 다음 문장 넘어갈 때 i가 2가 됨.
	printf("Hello World %d\n", i++); // 1이 출력되고 다음 문장 넘어갈 때 i가 2가 됨.
	printf("Hello World %d\n", i++); // 1이 출력되고 다음 문장 넘어갈 때 i가 2가 됨.
	printf("Hello World %d\n", i++); // 1이 출력되고 다음 문장 넘어갈 때 i가 2가 됨.
	printf("Hello World %d\n", i++); // 1이 출력되고 다음 문장 넘어갈 때 i가 2가 됨.
	*/


	/*
	// 반복문 : for
	// for (선언; 조건; 증감)
	for (int i = 1; i <= 10; i++) 
	{
		// int i = 1일 때 조건이 맞으면 이 안에꺼 실행하고 증감으로 이동하고 이것을 반복, 즉 11일 때는 수행하지 않고 for문 탈출
		printf("Hello World %d\n", i);
	}
	*/


	/*
	// 반복문 : while (조건) {}
	// 선언은 밖에서 하면됨
	int i = 1;
	while (i <= 10) 
	{
		// 조건이 맞는지 보고 조건이 맞을 때까지 동작 수행 -> 동작 수행 후 다시 조건이 맞는지 보고 수행
		printf("Hello World %d\n", i++); //문장 수행 후 더해지기 때문에 위치는 상관 없다.
		// i++
	}
	*/

	
	/*
	// 반복문 : do {} while (조건);
	int i = 1;
	do {
		printf("Hello World %d\n", i++);
	} 
	while (i <= 10);
	*/

	
	// 이중 반복문


	// 이중 반복문 파헤치기
	for (int i = 0; i <= 4; i++) {
		printf("*");
		for (int j = 0; j <= 1; j++) {
			printf("\n");
			printf("*");
		}
	}


	// 이중 반복문 (거꾸로 별)


	// 프로젝트


	/*
	// if, else
	// 버스를 탄다는 가정, 학생 / 일반인으로 구분 (일반인 : 20세)
	int age = 25;
	// if (조건) {...} else {...}
	if (age >= 20) 
	{
		// 조건이 성립하면 이 문장 실행
		printf("일반인입니다.\n");
	}

	else 
	{
		// 아닌 모든 경우에는 이 문장 실행
		printf("학생입니다.\n");
	}

	// 초등학생 (8-13) / 중학생 (14-16) / 고등학생 (17-19)으로 나누면?
	if (age >= 8 && age <= 13) // && : 조건을 모두 만족할 떄
	{
		// 맞으면 실행하고 조건이 맞지 않으면 else if 확인하고 또 안맞으면 다시 밑에 문장 확인
		printf("초등학생입니다.\n");
	}

	else if (age >= 14 && age <= 16)
	{
		// 여러 번 나올 수 있다.
		printf("중학생입니다.\n");
	}

	else if (age >= 17 && age <= 19) {
		printf("고등학생입니다.\n");

		// 맞으면 printf 찍고 if 구문 탈출하고 else 부분 들어오지 않고 탈출
	}
	
	else 
	{
		// if, else if 모두 포함하지 않는다. (조건에 만족하지 않는다)
		printf("일반인입니다.\n");
	}
	*/


	/*
	// break, continue
	// 1번부터 30번까지 있는 반에서 1번부터 5번까지 조별 발표를 한다.
	for (int i = 1; i <= 30; i++) {
		if (i >= 6) { // == 5 -> > 5 라고 했는데 답은 >= 6이였다. + 위치도 틀림
			printf("나머지 학생은 집에 가세요.\n");
			break; // i가 6일 때 집에 가라하고 조별발표 준비하라 나옴. + 조건이 맞으면 for문 탈출하도록.
		}
		printf("%d번 학생은 조별 발표 준비를 하세요.\n", i); //%d : 정수 표현 -> i가 들어감.
	}

	// 1번부터 30번까지 있는 반에서 7번 학생은 아파서 결석
	// 7번을 제외하고 6번부터 10번까지 조별발표를 하세요.
	for (int i = 1; i <= 30; i++) {
		if (i >= 6 && i <= 10) { // 조건 추가 안함
			if (i == 7) { // 위치 틀림
				printf("7번 학생은 결석입니다.\n");
				continue; // 만약 continue가 없다면 i == 7 조건에 부합했지만 바로 아래 문장이 있어 또 진행해서 결석했음에도 발표 준비를 해야하므로 continue 씀
				// 이 조건에 들어왔을 때 그 이후 문장을 실행하지 않고 다음 반복으로 넘어간다. (i == 7에 대해 print하고 continue 하기 때문에 i++로 넘어가 i = 8로 진행한다.
			}
			printf("%d번 학생은 조별발표를 준비하세요.\n", i);
		}
	}
	*/


	/*
	// and (앞 조건과 뒤 조건이 모두 해당될 때 이 조건문을 수행 / 모두 일치할 때) - &&, or (a와 b가 같거나 혹은 c와 d가 같으면 문장 수행 / 둘 중 하나만 맞으면 됨.) - ||
	int a = 10;
	int b = 11;
	int c = 12;
	int d = 13;
	if (a == b && c == d) {
		// b가 10이고 d가 12면 이 문장 출력
		// b가 10이고 ||으로 바뀌면 printf 내용이 a와 b 혹은 c와 d 값이 같습니다. 내용이며 이 문장이 실행된다.
		// c와 d만 12로 같으면 뒤에 조건이 일치해 이 문장 실행
		printf("a와 b는 같고 c와 d도 같습니다.");
	}
	else {
		printf("값이 서로 다르네요.");
	}
	*/


	/*
	// random
	int num = rand() % 3; //함수 -> 랜덤 수 뽑음 + % 어떤수 : 뽑고 싶은 숫자의 범위 지정 (3개의 경우의 수 중 하나를 뽑는데 시작하는 수는 0이라 0,1,2  3개 중 하나를 뽑음) 

	printf("난수 초기화 이전\n");
	for (int i = 0; i < 10; i++) {
		printf("%d\n", rand() % 10); // 0부터 9 사이에 있는 랜덤 수를 뽑음
	}

	srand(time(NULL)); // (랜덤 수를 뽑기 위한 난수 초기화 - 안하면 우리가 원하는 랜덤 수가 나오지 않음, 난수 초기화 안하면 안에서는 랜덤이나 실행할 때 같은 랜덤 수가 나온다.
	printf("난수 초기화 이후\n");
	for (int i = 0; i < 10; i++) {
		printf("%d\n", rand() % 10); // 0부터 9 사이에 있는 랜덤 수를 뽑음
	}
	*/


	/*
	// switch case
	// if else 코드 다시 쓰기!!
	if () {

	}
	else if () {

	}
	else {

	}

	// switch 코드
	srand(time(NULL));
	int i = rand() % 3; // 0 - 2 반환, 가위바위보 숫자코드

	switch (i) { // i = 값, 값의 경우에 따른 분류
		//값을 받아서 값이 해당하는 경우에 출력
	case 0: // 가위, i == 0일 때
		printf("가위\n");
		break; //각 경우마다 break 경우 넣어줘야함. 
		// break 안넣으면 i == 0일 때 출력하고 이후 모든 case는 조건 확인하지 않고 (비교 안하고) 다 실행한다. 수행 후 switch 탈출. 만나면 이후 case는 실행을 안하게 된다.
	case 1: // 바위
		printf("바위\n");
		break;
	case 2: // 보
		printf("보\n");
		break;
	default: //3개 경우 모두 제외
		printf("몰라요.\n");
		break;
	}


	// 실행해보기!!
	int age = 25;
	switch (age) {
	case 8:
		// 없으면 없는 문장을 실행했다.
	case 9:
	case 10:
	case 11:
	case 12:
	case 13:
		printf("초등학생입니다. \n");
		break;
	case 14:
	case 15:
	case 16:
		printf("중학생입니다. \n");
		break;
	case 17:
	case 18:
	case 19:
		printf("고등학생입니다. \n");
		break;
	default:
		printf("학생이 아닌가봐요. \n");
		break;
		// case는 하나밖에 못씀.
		// 여러번 반복하기 귀찮으므로 break 없애고 13세 만나면 break 만나서 이후 출력을 수행 못하므로 8 - 13 경우에는 모두 초등학생 경우 출력하고 빠져나온다.
	}
	*/


    // 프로젝트

	return 0;
}
